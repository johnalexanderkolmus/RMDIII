{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","_js/app.js","app.js","_js/classes/collections/InspirationCollection.js","_js/classes/models/Inspiration.js","_js/classes/routers/Application.js","_js/classes/views/OverviewView.js","node_modules/handlebars/dist/cjs/handlebars.runtime.js","node_modules/handlebars/dist/cjs/handlebars/base.js","node_modules/handlebars/dist/cjs/handlebars/exception.js","node_modules/handlebars/dist/cjs/handlebars/runtime.js","node_modules/handlebars/dist/cjs/handlebars/safe-string.js","node_modules/handlebars/dist/cjs/handlebars/utils.js","node_modules/handlebars/runtime.js","node_modules/hbsfy/runtime.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"init","Window","Application","Backbone","history","start","collection","InspirationCollection","fetch","./classes/collections/InspirationCollection.js","./classes/routers/Application.js","hbsfy/runtime",2,3,"module","Inspiration","Collection","extend","model","url","sync","method","options","methodUrl","toLowerCase","prototype","apply","this","arguments","../models/Inspiration.js",4,"Model","defaults","title","description","class","image","urlRoot",5,"OverviewView","Router","routes","overview","students/:id","*actions","empty","$","default","navigate","trigger","console","log","append","render","el","students","../views/OverviewView.js",6,"template","View","tagName","id","events","initialize","listenTo","renderInspirations","$inspirations","forEach","renderInspiration","view","InspirationItemView","$el","html","find","../../../_hbs/overview.hbs","../collections/InspirationCollection.js",7,"global","create","hb","base","HandlebarsEnvironment","Utils","SafeString","_SafeString2","Exception","_Exception2","escapeExpression","VM","runtime","spec","_interopRequireWildcard","obj","__esModule","_import","_SafeString","_Exception","_import2","_import3","Handlebars","root","window","$Handlebars","noConflict","self","./handlebars/base","./handlebars/exception","./handlebars/runtime","./handlebars/safe-string","./handlebars/utils",8,"helpers","partials","registerDefaultHelpers","instance","registerHelper","undefined","name","context","inverse","fn","isArray","ids","each","data","createFrame","contextPath","appendContextPath","execIteration","field","index","last","key","first","ret","blockParams","isFunction","j","priorKey","hasOwnProperty","conditional","hash","includeZero","isEmpty","message","level","parseInt","object","frame","_parent","VERSION","COMPILER_REVISION","REVISION_CHANGES","toString","objectType","constructor","logger","unregisterHelper","registerPartial","partial","unregisterPartial","methodMap","DEBUG","INFO","WARN","ERROR","./exception","./utils",9,"node","loc","line","column","tmp","idx","errorProps","captureStackTrace","lineNumber",10,"checkRevision","compilerInfo","compilerRevision","currentRevision","_COMPILER_REVISION$REVISION_CHANGES$createFrame","runtimeVersions","compilerVersions","templateSpec","env","invokePartialWrapper","resolvePartial","result","invokePartial","compile","compilerOptions","indent","lines","split","join","_setup","useData","initData","depths","useBlockParams","useDepths","concat","main","container","compiler","strict","lookup","len","lambda","current","programs","program","declaredBlockParams","programWrapper","wrapProgram","value","depth","merge","param","common","noop","isTop","usePartial","_child","prog","Function","./base",11,"string","toHTML",12,"escapeChar","chr","escape","Object","indexOf","array","possible","test","replace","badChars","params","path","&","<",">","\"","'","`","Array",13,"./dist/cjs/handlebars.runtime",14,"handlebars/runtime"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Handlebars = require(\"hbsfy/runtime\");\nvar Application = require(\"./classes/routers/Application.js\");\nvar InspirationCollection = require('./classes/collections/InspirationCollection.js');\n\n\nfunction init() {\n\n\n\t\t\tWindow.Application = new Application();\n\t\t\tBackbone.history.start();\n\n\t\t\tvar collection = new InspirationCollection();\n\t\t\tcollection.fetch();\n\n\n\n\n\n}\n\n/*fallback.load({\n\t\tjQuery: [\n\t\t'//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js',\n\t\t'js/vendor/jquery/dist/jquery.min.js'\n\t\t],\n\t\tModernizr: [\n\t\t'//cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js',\n\t\t'js/vendor/modernizr/modernizr.js'\n\t\t]\n\t});*/\n\ninit();",null,"var Inspiration = require('../models/Inspiration.js');\n\nvar InspirationCollection = Backbone.Collection.extend({\n\t\n\tmodel: Inspiration,\n\turl: '/RMDII_2015/OPDRACHTEN/INSPIRATIE/api/inspiration',\n\n\tsync: function(method, model, options) {\n\t\tif(model.methodUrl && model.methodUrl(method.toLowerCase())) {\n\t\t\toptions = options || {};\n\t\t\toptions.url = model.methodUrl(method.toLowerCase());\n\t\t}\n    Backbone.Collection.prototype.sync.apply(this, arguments);\n\t},\n\n\n});\n\nmodule.exports = InspirationCollection;\n","var Inspiration = Backbone.Model.extend({\n\n\tdefaults: {\n\n\t\t\"title\": \"No Title\",\n\t\t\"description\": \"No Description\",\n\t\t\"class\": \"No Class\",\n\t\t\"image\": \"\",\n\n\t},\n\n\turlRoot: '/RMDII_2015/OPDRACHTEN/INSPIRATIE/api/inspiration',\n\n\tsync: function(method, model, options) {\n\t\tif(model.methodUrl && model.methodUrl(method.toLowerCase())) {\n\t\t\toptions = options || {};\n\t\t\toptions.url = model.methodUrl(method.toLowerCase());\n\t\t}\n    Backbone.Collection.prototype.sync.apply(this, arguments);\n\t}\n\n});\n\nmodule.exports = Inspiration;","var OverviewView = require('../views/OverviewView.js');\n\nvar Application = Backbone.Router.extend({\n\n\troutes: {\n\n\t\t\"overview\": \"overview\",\n\t\t\"students/:id\": \"students\",\n\t\t\"*actions\": \"default\"\n\n\t},\n\n\tempty: function(){\n\n\t\t\t$('#container_insp').empty();\n\t\t\t//$('#content').remove();\n\n\t},\n\n\tdefault: function(){\n\n\t\tthis.navigate('overview', {trigger: true}); // url veranderen naar overview en trigger dient dat hij ook de url uitvoert\n\t\t\n\t},\n\n\toverview: function(){\n\n\t\tconsole.log(\"overview\");\n\t\t//eerst #container leegmaken en dan juiste content gaan inplakken\n\n\t\tthis.empty();\n\t\tthis.overview = new OverviewView();\n\t\t$('#container_insp').append(this.overview.render().el);\n\n\n\t},\n\n\tstudents: function(id){\n\n\t},\n\n});\n\nmodule.exports = Application;","var InspirationCollection = require('../collections/InspirationCollection.js');\n\nvar template = require('../../../_hbs/overview.hbs');\n\n\nvar OverviewView = Backbone.View.extend({\n\n\n\ttemplate: template,\n\ttagName: 'article',\n\tid: 'menu',\n\n\tevents: {\n\t\t\n\t},\n\n\tinitialize: function(){\n\n\t\tthis.collection = new InspirationCollection();\n\t\tconsole.log('initialize');\n\t\t//console.log(this.collection);\n\t\tthis.listenTo(this.collection, 'sync', this.renderInspirations);\n\t\tthis.collection.fetch();\n\n\t},\n\n\trenderInspirations: function(){\n\n\t\tconsole.log('renderinspirationssssss');\n\t\tconsole.log(this);\n\t\tthis.$inspirations.empty();\n\t\tthis.collection.forEach(this.renderInspiration, this);\n\n\t},\n\n\trenderInspiration: function(model){\n\t\tconsole.log('renderinspirationnnnn');\n\n\t\tvar view = new InspirationItemView({\n\t\t\tmodel: model\n\t\t});\n\n\t\tthis.$inspirations.append(view.render().el);\n\t\t\n\n\t},\n\n\trender: function(){\n\t\tconsole.log('render');\n\n\t\tthis.$el.html(this.template());\n\t\tthis.$inspirations = this.$el.find('#container');\n\t\tconsole.log(\"hallooo \" + $inspirations);\n\n\t\treturn this;\n\n\n\t},\n\n});\n\nmodule.exports = OverviewView;","'use strict';\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nexports.__esModule = true;\n/*global window */\n\nvar _import = require('./handlebars/base');\n\nvar base = _interopRequireWildcard(_import);\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\n\nvar _SafeString = require('./handlebars/safe-string');\n\nvar _SafeString2 = _interopRequireWildcard(_SafeString);\n\nvar _Exception = require('./handlebars/exception');\n\nvar _Exception2 = _interopRequireWildcard(_Exception);\n\nvar _import2 = require('./handlebars/utils');\n\nvar Utils = _interopRequireWildcard(_import2);\n\nvar _import3 = require('./handlebars/runtime');\n\nvar runtime = _interopRequireWildcard(_import3);\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  var hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = _SafeString2['default'];\n  hb.Exception = _Exception2['default'];\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function (spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nvar Handlebars = create();\nHandlebars.create = create;\n\n/*jshint -W040 */\n/* istanbul ignore next */\nvar root = typeof global !== 'undefined' ? global : window,\n    $Handlebars = root.Handlebars;\n/* istanbul ignore next */\nHandlebars.noConflict = function () {\n  if (root.Handlebars === Handlebars) {\n    root.Handlebars = $Handlebars;\n  }\n};\n\nHandlebars['default'] = Handlebars;\n\nexports['default'] = Handlebars;\nmodule.exports = exports['default'];","'use strict';\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nexports.__esModule = true;\nexports.HandlebarsEnvironment = HandlebarsEnvironment;\nexports.createFrame = createFrame;\n\nvar _import = require('./utils');\n\nvar Utils = _interopRequireWildcard(_import);\n\nvar _Exception = require('./exception');\n\nvar _Exception2 = _interopRequireWildcard(_Exception);\n\nvar VERSION = '3.0.1';\nexports.VERSION = VERSION;\nvar COMPILER_REVISION = 6;\n\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1'\n};\n\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar isArray = Utils.isArray,\n    isFunction = Utils.isFunction,\n    toString = Utils.toString,\n    objectType = '[object Object]';\n\nfunction HandlebarsEnvironment(helpers, partials) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n\n  registerDefaultHelpers(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: logger,\n  log: log,\n\n  registerHelper: function registerHelper(name, fn) {\n    if (toString.call(name) === objectType) {\n      if (fn) {\n        throw new _Exception2['default']('Arg not supported with multiple helpers');\n      }\n      Utils.extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function unregisterHelper(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function registerPartial(name, partial) {\n    if (toString.call(name) === objectType) {\n      Utils.extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new _Exception2['default']('Attempting to register a partial as undefined');\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function unregisterPartial(name) {\n    delete this.partials[name];\n  }\n};\n\nfunction registerDefaultHelpers(instance) {\n  instance.registerHelper('helperMissing', function () {\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} constuct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new _Exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n    }\n  });\n\n  instance.registerHelper('blockHelperMissing', function (context, options) {\n    var inverse = options.inverse,\n        fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        var data = createFrame(options.data);\n        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n\n  instance.registerHelper('each', function (context, options) {\n    if (!options) {\n      throw new _Exception2['default']('Must pass iterator to #each');\n    }\n\n    var fn = options.fn,\n        inverse = options.inverse,\n        i = 0,\n        ret = '',\n        data = undefined,\n        contextPath = undefined;\n\n    if (options.data && options.ids) {\n      contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret = ret + fn(context[field], {\n        data: data,\n        blockParams: Utils.blockParams([context[field], field], [contextPath + field, null])\n      });\n    }\n\n    if (context && typeof context === 'object') {\n      if (isArray(context)) {\n        for (var j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        var priorKey = undefined;\n\n        for (var key in context) {\n          if (context.hasOwnProperty(key)) {\n            // We're running the iterations one step out of sync so we can detect\n            // the last iteration without have to scan the object twice and create\n            // an itermediate keys array.\n            if (priorKey) {\n              execIteration(priorKey, i - 1);\n            }\n            priorKey = key;\n            i++;\n          }\n        }\n        if (priorKey) {\n          execIteration(priorKey, i - 1, true);\n        }\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n\n  instance.registerHelper('if', function (conditional, options) {\n    if (isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if (!options.hash.includeZero && !conditional || Utils.isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function (conditional, options) {\n    return instance.helpers['if'].call(this, conditional, { fn: options.inverse, inverse: options.fn, hash: options.hash });\n  });\n\n  instance.registerHelper('with', function (context, options) {\n    if (isFunction(context)) {\n      context = context.call(this);\n    }\n\n    var fn = options.fn;\n\n    if (!Utils.isEmpty(context)) {\n      if (options.data && options.ids) {\n        var data = createFrame(options.data);\n        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    } else {\n      return options.inverse(this);\n    }\n  });\n\n  instance.registerHelper('log', function (message, options) {\n    var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;\n    instance.log(level, message);\n  });\n\n  instance.registerHelper('lookup', function (obj, field) {\n    return obj && obj[field];\n  });\n}\n\nvar logger = {\n  methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },\n\n  // State enum\n  DEBUG: 0,\n  INFO: 1,\n  WARN: 2,\n  ERROR: 3,\n  level: 1,\n\n  // Can be overridden in the host environment\n  log: function log(level, message) {\n    if (typeof console !== 'undefined' && logger.level <= level) {\n      var method = logger.methodMap[level];\n      (console[method] || console.log).call(console, message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexports.logger = logger;\nvar log = logger.log;\n\nexports.log = log;\n\nfunction createFrame(object) {\n  var frame = Utils.extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\n/* [args, ]options */","'use strict';\n\nexports.__esModule = true;\n\nvar errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  var loc = node && node.loc,\n      line = undefined,\n      column = undefined;\n  if (loc) {\n    line = loc.start.line;\n    column = loc.start.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  var tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  if (loc) {\n    this.lineNumber = line;\n    this.column = column;\n  }\n}\n\nException.prototype = new Error();\n\nexports['default'] = Exception;\nmodule.exports = exports['default'];","'use strict';\n\nvar _interopRequireWildcard = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };\n\nexports.__esModule = true;\nexports.checkRevision = checkRevision;\n\n// TODO: Remove this line and break up compilePartial\n\nexports.template = template;\nexports.wrapProgram = wrapProgram;\nexports.resolvePartial = resolvePartial;\nexports.invokePartial = invokePartial;\nexports.noop = noop;\n\nvar _import = require('./utils');\n\nvar Utils = _interopRequireWildcard(_import);\n\nvar _Exception = require('./exception');\n\nvar _Exception2 = _interopRequireWildcard(_Exception);\n\nvar _COMPILER_REVISION$REVISION_CHANGES$createFrame = require('./base');\n\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n      currentRevision = _COMPILER_REVISION$REVISION_CHANGES$createFrame.COMPILER_REVISION;\n\n  if (compilerRevision !== currentRevision) {\n    if (compilerRevision < currentRevision) {\n      var runtimeVersions = _COMPILER_REVISION$REVISION_CHANGES$createFrame.REVISION_CHANGES[currentRevision],\n          compilerVersions = _COMPILER_REVISION$REVISION_CHANGES$createFrame.REVISION_CHANGES[compilerRevision];\n      throw new _Exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n    } else {\n      // Use the embedded version info since the runtime doesn't know about this revision yet\n      throw new _Exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n    }\n  }\n}\n\nfunction template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new _Exception2['default']('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new _Exception2['default']('Unknown template object: ' + typeof templateSpec);\n  }\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as psuedo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n    }\n\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n    var result = env.VM.invokePartial.call(this, partial, context, options);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, options);\n    }\n    if (result != null) {\n      if (options.indent) {\n        var lines = result.split('\\n');\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new _Exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  var container = {\n    strict: function strict(obj, name) {\n      if (!(name in obj)) {\n        throw new _Exception2['default']('\"' + name + '\" not defined in ' + obj);\n      }\n      return obj[name];\n    },\n    lookup: function lookup(depths, name) {\n      var len = depths.length;\n      for (var i = 0; i < len; i++) {\n        if (depths[i] && depths[i][name] != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function lambda(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function fn(i) {\n      return templateSpec[i];\n    },\n\n    programs: [],\n    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n      var programWrapper = this.programs[i],\n          fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function data(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    merge: function merge(param, common) {\n      var obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context) {\n    var options = arguments[1] === undefined ? {} : arguments[1];\n\n    var data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    var depths = undefined,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      depths = options.depths ? [context].concat(options.depths) : [context];\n    }\n\n    return templateSpec.main.call(container, context, container.helpers, container.partials, data, blockParams, depths);\n  }\n  ret.isTop = true;\n\n  ret._setup = function (options) {\n    if (!options.partial) {\n      container.helpers = container.merge(options.helpers, env.helpers);\n\n      if (templateSpec.usePartial) {\n        container.partials = container.merge(options.partials, env.partials);\n      }\n    } else {\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n    }\n  };\n\n  ret._child = function (i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new _Exception2['default']('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new _Exception2['default']('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context) {\n    var options = arguments[1] === undefined ? {} : arguments[1];\n\n    return fn.call(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), depths && [context].concat(depths));\n  }\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\nfunction resolvePartial(partial, context, options) {\n  if (!partial) {\n    partial = options.partials[options.name];\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nfunction invokePartial(partial, context, options) {\n  options.partial = true;\n\n  if (partial === undefined) {\n    throw new _Exception2['default']('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nfunction noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? _COMPILER_REVISION$REVISION_CHANGES$createFrame.createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}","'use strict';\n\nexports.__esModule = true;\n// Build out our basic SafeString type\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n  return '' + this.string;\n};\n\nexports['default'] = SafeString;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports.extend = extend;\n\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\nexports.indexOf = indexOf;\nexports.escapeExpression = escapeExpression;\nexports.isEmpty = isEmpty;\nexports.blockParams = blockParams;\nexports.appendContextPath = appendContextPath;\n/*jshint -W004 */\nvar escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;',\n  '`': '&#x60;'\n};\n\nvar badChars = /[&<>\"'`]/g,\n    possible = /[&<>\"'`]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nfunction extend(obj /* , ...source */) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nvar toString = Object.prototype.toString;\n\nexports.toString = toString;\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/*eslint-disable func-style, no-var */\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  exports.isFunction = isFunction = function (value) {\n    return typeof value === 'function' && toString.call(value) === '[object Function]';\n  };\n}\nvar isFunction;\nexports.isFunction = isFunction;\n/*eslint-enable func-style, no-var */\n\n/* istanbul ignore next */\nvar isArray = Array.isArray || function (value) {\n  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n};exports.isArray = isArray;\n\nfunction indexOf(array, value) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nfunction isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nfunction appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}","// Create a simple path alias to allow browserify to resolve\n// the runtime on a supported path.\nmodule.exports = require('./dist/cjs/handlebars.runtime')['default'];\n","module.exports = require(\"handlebars/runtime\")[\"default\"];\n"],"sourceRoot":"../"}